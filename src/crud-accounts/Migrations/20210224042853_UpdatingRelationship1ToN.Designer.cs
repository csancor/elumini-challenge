// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crud_accounts.Models;

namespace crud_accounts.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20210224042853_UpdatingRelationship1ToN")]
    partial class UpdatingRelationship1ToN
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("crud_accounts.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef13704e-529e-404a-be44-af1beabcd2e7"),
                            Bairro = "Centro",
                            Cep = "20260525",
                            Complemento = "casa 23",
                            Logradouro = "Rua Sete de Setembro",
                            Municipio = "Rio de Janeiro",
                            Numero = "15",
                            uf = "RJ"
                        },
                        new
                        {
                            Id = new Guid("4b62b5cb-298b-421e-aed8-5095def1107c"),
                            Bairro = "Centro",
                            Cep = "11260525",
                            Complemento = "bloco 6 ap 306",
                            Logradouro = "Avenida Paulista",
                            Municipio = "São Paulo",
                            Numero = "1205",
                            uf = "SP"
                        },
                        new
                        {
                            Id = new Guid("6306a51a-da84-4536-b6ba-2434eef98a62"),
                            Bairro = "Bangu",
                            Cep = "21280525",
                            Complemento = "casa 5",
                            Logradouro = "Avenida Ministro Ary Franco",
                            Municipio = "Rio de Janeiro",
                            Numero = "2255",
                            uf = "RJ"
                        });
                });

            modelBuilder.Entity("crud_accounts.Models.EnderecoPessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cep")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<Guid>("PessoaForeignKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("uf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaForeignKey")
                        .IsUnique();

                    b.ToTable("EnderecoPessoa");
                });

            modelBuilder.Entity("crud_accounts.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50b0558d-d9fa-46bc-b6a4-27f1bccea363"),
                            Cpf = "111548",
                            Nome = "Herb Hancock",
                            Rg = "21514151"
                        },
                        new
                        {
                            Id = new Guid("45b28ca8-938f-4b16-b2de-780d255b7c44"),
                            Cpf = "1252632545",
                            Nome = "Chick Corea",
                            Rg = "207255136"
                        },
                        new
                        {
                            Id = new Guid("ae6948bf-41c6-45c2-9c50-6a99f3eaeb8f"),
                            Cpf = "111548",
                            Nome = "Charlie Parker",
                            Rg = "153526548"
                        });
                });

            modelBuilder.Entity("crud_accounts.Models.Telefone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Telefones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca288b58-b155-4763-91bc-31409fa0098f"),
                            Numero = "985635241",
                            Tipo = "Celular"
                        },
                        new
                        {
                            Id = new Guid("fa79fb9a-7e91-4db8-b626-af61134909b2"),
                            Numero = "975859654",
                            Tipo = "Celular"
                        },
                        new
                        {
                            Id = new Guid("50d72c5b-d91c-4480-83da-e1cce9b9da04"),
                            Numero = "312524684",
                            Tipo = "Fixo"
                        });
                });

            modelBuilder.Entity("crud_accounts.Models.TelefonePessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<Guid>("PessoaForeignKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaForeignKey");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("TelefonePessoa");
                });

            modelBuilder.Entity("crud_accounts.Models.EnderecoPessoa", b =>
                {
                    b.HasOne("crud_accounts.Models.Pessoa", "Pessoa")
                        .WithOne("Endereco")
                        .HasForeignKey("crud_accounts.Models.EnderecoPessoa", "PessoaForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("crud_accounts.Models.TelefonePessoa", b =>
                {
                    b.HasOne("crud_accounts.Models.Pessoa", "Pessoa")
                        .WithMany("Telefones")
                        .HasForeignKey("PessoaForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("crud_accounts.Models.Pessoa", null)
                        .WithOne("Telefone")
                        .HasForeignKey("crud_accounts.Models.TelefonePessoa", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
